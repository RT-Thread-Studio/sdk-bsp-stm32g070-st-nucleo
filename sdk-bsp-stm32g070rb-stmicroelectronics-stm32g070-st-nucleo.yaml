board:
  buy_url_cn: https://www.st.com/zh/evaluation-tools/nucleo-g070rb.html#sample-buy
  buy_url_global: https://www.st.com/en/evaluation-tools/nucleo-g070rb.html#sample-buy
  debug_interface: SWD
  debugger: ST-LINK
  description_en: The STM32 Nucleo-64 board provides an affordable and flexible way
    for users to try out new concepts and build prototypes by choosing from the various
    combinations of performance and power consumption features, provided by the STM32
    microcontroller. For the compatible boards, the external SMPS significantly reduces
    power consumption in Run mode.
  description_zh: STM32G070RB-Nucleo 开发板是 ST 官方推出的一款基于 ARM Cortex-M0+ 内核的开发板，最高主频为
    64Mhz，该开发板具有丰富的扩展接口，可以方便验证 STM32G070RB 的芯片性能。
  emulator_machine: ''
  large_image: documents/images/board.png
  name: STM32G070-ST-NUCLEO
  price_cn: 84 CNY
  price_global: 12.99 USD
  sale_contact_cn: https://www.st.com/zh/evaluation-tools/nucleo-g070rb.html
  sale_contact_global: https://www.st.com/en/evaluation-tools/nucleo-g070rb.html
  small_image: documents/images/board - small.png
  vendor: STMicroelectronics
  version: 1.0.0
chip:
  chip_name: STM32G070RB
  clock_source: HSE
  device_vendor: STMicroelectronics
  family_name: STM32
  rx_name: PA10
  series_name: STM32G0
  source_freq: '8000000'
  sub_series_name: STM32G070
  target_freq: '240000000'
  tx_name: PA9
  uart_name: UART1
docs:
- category: manual
  file: documents/dm00105928-getting-started-with-stm32-nucleo-board-software-development-tools-stmicroelectronics.pdf
  title: dm00105928-getting-started-with-stm32-nucleo-board-software-development-tools-stmicroelectronics
example_projects: []
features:
- 'MCU: STM32G070RB, Main Frequency 64MHz, 128KB Flash, 36KB RAM'
- 'Keys: 1, User (with wake-up function, PC13)'
- 'Common interfaces: USB to serial port, Arduino interface, etc'
features_zh:
- MCU：STM32G070RB，主频 64MHz，128KB FLASH ，36KB RAM
- 按键：1个，user（兼具唤醒功能，PC13）
- 常用接口：USB 转串口、arduino 接口等
pkg_type: Board_Support_Packages
pkg_vendor: RealThread
pkg_version: 1.0.0
template_projects:
- builtin_files:
  - files_and_folders:
    - .config
    - .cproject
    - .gitignore
    - .project
    - .settings
    - applications
    - board
    - cconfig.h
    - figures
    - Kconfig
    - libraries
    - makefile.targets
    - project.ewp
    - project.eww
    - project.uvprojx
    - README.md
    - README_zh.md
    - rtconfig.h
    - rtconfig.py
    - rtconfig_preinc.h
    - SConscript
    - SConstruct
    - template.ewp
    - template.eww
    - template.uvprojx
    source_path_offset: project_0
    target_path_offset: ''
  external_files:
  - files_and_folders:
    - components
    - include
    - libcpu/arm
    - libcpu/Kconfig
    - libcpu/SConscript
    - src
    - tools
    - Kconfig
    - LICENSE
    package_name: RT-Thread
    package_type: RT-Thread_Source_Code
    package_vendor: ''
    package_version: latest
    source_path_offset: rt-thread
    target_path_offset: rt-thread
  project_description: ''
  project_name: stm32g070
  project_type: rt-thread|@full|@latest
- builtin_files:
  - files_and_folders:
    - .config
    - .cproject
    - .gitignore
    - .project
    - .settings
    - applications
    - board
    - cconfig.h
    - figures
    - Kconfig
    - libraries
    - makefile.targets
    - project.ewp
    - project.eww
    - project.uvprojx
    - README.md
    - README_zh.md
    - rtconfig.h
    - rtconfig.py
    - rtconfig_preinc.h
    - SConscript
    - SConstruct
    - template.ewp
    - template.eww
    - template.uvprojx
    source_path_offset: project_0
    target_path_offset: ''
  external_files:
  - files_and_folders:
    - components
    - include
    - libcpu/arm
    - libcpu/Kconfig
    - libcpu/SConscript
    - src
    - tools
    - Kconfig
    - LICENSE
    package_name: RT-Thread
    package_type: RT-Thread_Source_Code
    package_vendor: ''
    package_version: 4.0.5
    source_path_offset: ''
    target_path_offset: rt-thread
  project_description: ''
  project_name: stm32g070
  project_type: rt-thread|@full|@4.0.5  
yaml_version: 3
